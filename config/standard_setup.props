<?xml version="1.0" encoding="Windows-1252"?>
<Project ToolsVersion="12.0" 
  xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
<!-- This file contains settings that are meant to be shared across all windows machines, not customizable by developers as such -->
<!-- This file stems from a project specific context, and as you look at it you will see arbitrary locations and variable names; once put on github we'll gradually generalize it. -->

<!-- This props file requires a few paths to have been set up prior to inclusion. Let's validate with explicit messages: -->
  <Target Name="ValidatePaths" BeforeTargets="Compile">  
    <!-- <Error Text="PriorIncludePaths='$(PriorIncludePaths)'" /> -->
    <Error Condition="!exists('$(RootLocalPath)')" Text="RootLocalPath='$(RootLocalPath)' not found" />
    <Error Condition="!exists('$(RootLocalLibraryPath)')" Text="RootLocalLibraryPath='$(RootLocalLibraryPath)' not found" />
    <Error Condition="!exists('$(RootLocalIncludePath)')" Text="RootLocalIncludePath='$(RootLocalIncludePath)' not found" />
  </Target>

  <PropertyGroup Label="ConfigOutdir">
    <RelativeOutDir>$(Platform)/$(Configuration)/</RelativeOutDir>    
  </PropertyGroup>
  <!--Trying to use iterations of lists (ItemGroup); seems to work if called with msbuild /t 
  but then how to call the execution of this thing before further definitions of LocalLibraryPaths-->
<!--Properties in a PropertyGroup are evaluated first, so we cannot 
create evaluation-time properties based on the content of an itemgroup. See
  https://msdn.microsoft.com/en-us/library/dd997067.aspx#Property%20and%20Item%20Evaluation%20Order
  -->
  <!--<Target Name="SourceBuildOutputPaths" Inputs="@SrcOutLocation" Outputs="%(SrcOutLocation.Identity)">
    <Message Text="%(SrcOutLocation.BuildOutPath)/$(RelativeOutDir)" />
    <PropertyGroup Label="SetSrcDerivedBuildDirectories">
      <SrcDevLibraryPathArch Condition="('$(RootLocalDevLibraryPath)'!='')">%(SrcOutLocation.BuildOutPath)/$(RelativeOutDir)/</SrcDevLibraryPathArch>
      <LocalLibraryPaths Condition="('$(RootLocalDevLibraryPath)'!='') and ('$(LocalLibraryPaths)'=='')">$(SrcDevLibraryPathArch)</LocalLibraryPaths>
      <LocalLibraryPaths Condition="('$(RootLocalDevLibraryPath)'!='') and ('$(LocalLibraryPaths)'!='')">$(LocalLibraryPaths);$(SrcDevLibraryPathArch)</LocalLibraryPaths>
    </PropertyGroup>
  </Target>-->
  <!--It is called Temporary but it may be the only possible solution... Yuck...-->
  <PropertyGroup Label="TemporaryWorkaroundSourceBuildOutputPaths">

    <SrcDevLibraryPathArch Condition="('$(BuildOutputPath_1)'=='')"></SrcDevLibraryPathArch>
    <SrcDevLibraryPathArch Condition="('$(BuildOutputPath_1)'!='')">$(BuildOutputPath_1)/$(RelativeOutDir)</SrcDevLibraryPathArch>
    <LocalLibraryPaths Condition="('$(SrcDevLibraryPathArch)'!='') and ('$(LocalLibraryPaths)'=='')">$(SrcDevLibraryPathArch)</LocalLibraryPaths>
	  <LocalLibraryPaths Condition="('$(SrcDevLibraryPathArch)'!='') and ('$(LocalLibraryPaths)'!='')">$(LocalLibraryPaths);$(SrcDevLibraryPathArch)</LocalLibraryPaths>

    <SrcDevLibraryPathArch Condition="('$(BuildOutputPath_2)'=='')"></SrcDevLibraryPathArch>
    <SrcDevLibraryPathArch Condition="('$(BuildOutputPath_2)'!='')">$(BuildOutputPath_2)/$(RelativeOutDir)</SrcDevLibraryPathArch>
    <LocalLibraryPaths Condition="('$(SrcDevLibraryPathArch)'!='') and ('$(LocalLibraryPaths)'=='')">$(SrcDevLibraryPathArch)</LocalLibraryPaths>
	  <LocalLibraryPaths Condition="('$(SrcDevLibraryPathArch)'!='') and ('$(LocalLibraryPaths)'!='')">$(LocalLibraryPaths);$(SrcDevLibraryPathArch)</LocalLibraryPaths>

    <SrcDevLibraryPathArch Condition="('$(BuildOutputPath_3)'=='')"></SrcDevLibraryPathArch>
    <SrcDevLibraryPathArch Condition="('$(BuildOutputPath_3)'!='')">$(BuildOutputPath_3)/$(RelativeOutDir)</SrcDevLibraryPathArch>
    <LocalLibraryPaths Condition="('$(SrcDevLibraryPathArch)'!='') and ('$(LocalLibraryPaths)'=='')">$(SrcDevLibraryPathArch)</LocalLibraryPaths>
	  <LocalLibraryPaths Condition="('$(SrcDevLibraryPathArch)'!='') and ('$(LocalLibraryPaths)'!='')">$(LocalLibraryPaths);$(SrcDevLibraryPathArch)</LocalLibraryPaths>

    <SrcDevLibraryPathArch Condition="('$(BuildOutputPath_4)'=='')"></SrcDevLibraryPathArch>
    <SrcDevLibraryPathArch Condition="('$(BuildOutputPath_4)'!='')">$(BuildOutputPath_4)/$(RelativeOutDir)</SrcDevLibraryPathArch>
    <LocalLibraryPaths Condition="('$(SrcDevLibraryPathArch)'!='') and ('$(LocalLibraryPaths)'=='')">$(SrcDevLibraryPathArch)</LocalLibraryPaths>
	  <LocalLibraryPaths Condition="('$(SrcDevLibraryPathArch)'!='') and ('$(LocalLibraryPaths)'!='')">$(LocalLibraryPaths);$(SrcDevLibraryPathArch)</LocalLibraryPaths>

    <SrcDevLibraryPathArch Condition="('$(BuildOutputPath_5)'=='')"></SrcDevLibraryPathArch>
    <SrcDevLibraryPathArch Condition="('$(BuildOutputPath_5)'!='')">$(BuildOutputPath_5)/$(RelativeOutDir)</SrcDevLibraryPathArch>
    <LocalLibraryPaths Condition="('$(SrcDevLibraryPathArch)'!='') and ('$(LocalLibraryPaths)'=='')">$(SrcDevLibraryPathArch)</LocalLibraryPaths>
	  <LocalLibraryPaths Condition="('$(SrcDevLibraryPathArch)'!='') and ('$(LocalLibraryPaths)'!='')">$(LocalLibraryPaths);$(SrcDevLibraryPathArch)</LocalLibraryPaths>

    <SrcDevLibraryPathArch Condition="('$(BuildOutputPath_6)'=='')"></SrcDevLibraryPathArch>
    <SrcDevLibraryPathArch Condition="('$(BuildOutputPath_6)'!='')">$(BuildOutputPath_6)/$(RelativeOutDir)</SrcDevLibraryPathArch>
    <LocalLibraryPaths Condition="('$(SrcDevLibraryPathArch)'!='') and ('$(LocalLibraryPaths)'=='')">$(SrcDevLibraryPathArch)</LocalLibraryPaths>
	  <LocalLibraryPaths Condition="('$(SrcDevLibraryPathArch)'!='') and ('$(LocalLibraryPaths)'!='')">$(LocalLibraryPaths);$(SrcDevLibraryPathArch)</LocalLibraryPaths>

    <SrcDevLibraryPathArch Condition="('$(BuildOutputPath_7)'=='')"></SrcDevLibraryPathArch>
    <SrcDevLibraryPathArch Condition="('$(BuildOutputPath_7)'!='')">$(BuildOutputPath_7)/$(RelativeOutDir)</SrcDevLibraryPathArch>
    <LocalLibraryPaths Condition="('$(SrcDevLibraryPathArch)'!='') and ('$(LocalLibraryPaths)'=='')">$(SrcDevLibraryPathArch)</LocalLibraryPaths>
	  <LocalLibraryPaths Condition="('$(SrcDevLibraryPathArch)'!='') and ('$(LocalLibraryPaths)'!='')">$(LocalLibraryPaths);$(SrcDevLibraryPathArch)</LocalLibraryPaths>

    <SrcDevLibraryPathArch Condition="('$(BuildOutputPath_8)'=='')"></SrcDevLibraryPathArch>
    <SrcDevLibraryPathArch Condition="('$(BuildOutputPath_8)'!='')">$(BuildOutputPath_8)/$(RelativeOutDir)</SrcDevLibraryPathArch>
    <LocalLibraryPaths Condition="('$(SrcDevLibraryPathArch)'!='') and ('$(LocalLibraryPaths)'=='')">$(SrcDevLibraryPathArch)</LocalLibraryPaths>
	  <LocalLibraryPaths Condition="('$(SrcDevLibraryPathArch)'!='') and ('$(LocalLibraryPaths)'!='')">$(LocalLibraryPaths);$(SrcDevLibraryPathArch)</LocalLibraryPaths>

    <SrcDevLibraryPathArch Condition="('$(BuildOutputPath_9)'=='')"></SrcDevLibraryPathArch>
    <SrcDevLibraryPathArch Condition="('$(BuildOutputPath_9)'!='')">$(BuildOutputPath_9)/$(RelativeOutDir)</SrcDevLibraryPathArch>
    <LocalLibraryPaths Condition="('$(SrcDevLibraryPathArch)'!='') and ('$(LocalLibraryPaths)'=='')">$(SrcDevLibraryPathArch)</LocalLibraryPaths>
	  <LocalLibraryPaths Condition="('$(SrcDevLibraryPathArch)'!='') and ('$(LocalLibraryPaths)'!='')">$(LocalLibraryPaths);$(SrcDevLibraryPathArch)</LocalLibraryPaths>
    <!--etc. if you need more paths to append.-->
  </PropertyGroup>
  <PropertyGroup Label="UserMacros">
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir>$(SolutionDir)/$(RelativeOutDir)</OutDir>
    <!-- Let's set up compilation options that are typically dependent only on whether we are in debug or release mode. -->
    <LinkIncremental Condition="'$(Configuration)'=='Debug'">true</LinkIncremental>
    <LinkIncremental Condition="'$(Configuration)'=='Release'">false</LinkIncremental>
    <UseDebugLibraries Condition="'$(Configuration)'=='Debug'">true</UseDebugLibraries>
    <UseDebugLibraries Condition="'$(Configuration)'=='Release'">false</UseDebugLibraries>
    <InlineFuncExpansionSetting Condition="'$(Configuration)'=='Debug'">Disabled</InlineFuncExpansionSetting>
    <InlineFuncExpansionSetting Condition="'$(Configuration)'=='Release'">AnySuitable</InlineFuncExpansionSetting>
    <OptimizationSetting Condition="'$(Configuration)'=='Debug'">Disabled</OptimizationSetting>
    <OptimizationSetting Condition="'$(Configuration)'=='Release'">MaxSpeed</OptimizationSetting>	
    <Optimization>$(OptimizationSetting)</Optimization>	
    <WholeProgramOptimization Condition="'$(Configuration)'=='Debug'">false</WholeProgramOptimization>
    <WholeProgramOptimization Condition="'$(Configuration)'=='Release'">true</WholeProgramOptimization>	
    <CmakeIntDir >$(Configuration)/$(Platform)</CmakeIntDir>
    <GenerateManifest>true</GenerateManifest>
	
	<!-- Variables directly related to the architecture, 
    which we will use to build architecture dependent paths -->
    <MachineArch Condition="'$(Platform)'=='Win32'">X86</MachineArch>
    <MachineArch Condition="'$(Platform)'=='x64'">x64</MachineArch>
    <MachineBits Condition="'$(Platform)'=='Win32'">32</MachineBits>
    <MachineBits Condition="'$(Platform)'=='x64'">64</MachineBits>
 
    <!-- A variable for include paths; 
    we favor the inclusion of header files with directory, e.g. netcdf/netcdf.h, so RootLocalIncludePath should 
    go in before the full include directory paths -->
    
    <PriorIncludePaths>$(LocalIncludePaths)</PriorIncludePaths>
    <!-- NOTE: using things like "$(RootLocalIncludePath)/boost;" should be largely unnecessary, however the unsupported features of Eigen3 seem to necessitate this. -->
    <AddedIncludePaths>$(RootLocalIncludePath);$(RootLocalIncludePath)/boost;$(RootLocalIncludePath)/eigen3;$(RootLocalIncludePath)/netcdf;$(RootLocalIncludePath)/catch;$(RootLocalIncludePath)/curl;$(RootLocalIncludePath)/datatypes;$(RootLocalIncludePath)/vld;$(RootLocalIncludePath)/moirai</AddedIncludePaths>
    <LocalIncludePaths Condition="'$(PriorIncludePaths)'==''">$(AddedIncludePaths)</LocalIncludePaths>
    <LocalIncludePaths Condition="'$(PriorIncludePaths)'!=''">$(PriorIncludePaths);$(AddedIncludePaths)</LocalIncludePaths>

    <!-- Paths to the shared libraries (.dll) and '.lib' files used by the VCPP compiler -->

  <!--At this point LocalLibraryPaths should be empty, but we cater for the case where it has been preset.-->
    <!--There may be a c:\local\devlibs to add:-->
    <LocalDevLibraryPathArch Condition="('$(RootLocalDevLibraryPath)'!='')">$(RootLocalDevLibraryPath)/$(MachineBits)/</LocalDevLibraryPathArch>
    <LocalLibraryPaths Condition="('$(RootLocalDevLibraryPath)'!='') and ('$(LocalLibraryPaths)'=='')">$(LocalDevLibraryPathArch)</LocalLibraryPaths>
    <LocalLibraryPaths Condition="('$(RootLocalDevLibraryPath)'!='') and ('$(LocalLibraryPaths)'!='')">$(LocalLibraryPaths);$(LocalDevLibraryPathArch)</LocalLibraryPaths>

    <!--There may (should) be a c:\local\libs to add:-->
    <LocalLibraryPathArch Condition="('$(RootLocalLibraryPath)'!='')">$(RootLocalLibraryPath)/$(MachineBits)/</LocalLibraryPathArch>
    <LocalLibraryPaths Condition="('$(RootLocalLibraryPath)'!='') and ('$(LocalLibraryPaths)'=='')">$(LocalLibraryPathArch)</LocalLibraryPaths>
    <LocalLibraryPaths Condition="('$(RootLocalLibraryPath)'!='') and ('$(LocalLibraryPaths)'!='')">$(LocalLibraryPaths);$(LocalLibraryPathArch)</LocalLibraryPaths>

    <!-- for R we will tap directly into the installed path rather than require it to be under RootLocalPath. Pragmatic. -->
    <RLibPath Condition="exists('$(RInstallPath)') and '$(Platform)'=='Win32'">$(RInstallPath)/bin/i386</RLibPath>
    <RLibPath Condition="exists('$(RInstallPath)') and '$(Platform)'=='x64'">$(RInstallPath)/bin/x64</RLibPath>
    <VisualLeakDetectorLibPath>$(VisualLeakDetectorPath)/lib/Win$(MachineBits)</VisualLeakDetectorLibPath>

    <!-- 
    In order to avoid having to modify the system PATH, we can use the LocalDebuggerEnvironment macro variable
    Using msbuild property functions to create backslashed files
    https://msdn.microsoft.com/en-us/library/dd633440(v=vs.120).aspx
    and http://stackoverflow.com/a/1251198
    -->
    <RootLibPathDOS Condition="exists('$(RootLibPath)')">$([System.IO.Path]::GetFullPath('$(RootLibPath.Replace("/","\\"))'))</RootLibPathDOS>
    <LocalDevLibraryPathArchDOS Condition="exists('$(LocalDevLibraryPathArch)')">$([System.IO.Path]::GetFullPath('$(LocalDevLibraryPathArch.Replace("/","\\"))'))</LocalDevLibraryPathArchDOS>
    <LocalLibraryPathArchDOS Condition="exists('$(LocalLibraryPathArch)')">$([System.IO.Path]::GetFullPath('$(LocalLibraryPathArch.Replace("/","\\"))'))</LocalLibraryPathArchDOS>


    <!-- 
    Note that setting LocalDebuggerEnvironment here means we rely on the user-specific vcxproj stuff in the debugger section to have:
    Merge Environments ticked
    and "Inherit from parent or project defaults" in the local debugger env section.
    -->
    <OtherLibPathDOS Condition="('$(LocalDevLibraryPathArchDOS)'!='')">$(LocalDevLibraryPathArchDOS)</OtherLibPathDOS>
    <OtherLibPathDOS Condition="('$(LocalLibraryPathArchDOS)'!='') and ('$(LocalDevLibraryPathArchDOS)'=='')">$(LocalLibraryPathArchDOS)</OtherLibPathDOS>
    <OtherLibPathDOS Condition="('$(LocalLibraryPathArchDOS)'!='') and ('$(LocalDevLibraryPathArchDOS)'!='')">$(LocalDevLibraryPathArchDOS);$(LocalLibraryPathArchDOS)</OtherLibPathDOS>

    <LocalDebuggerEnvironment>PATH=$(OtherLibPathDOS)</LocalDebuggerEnvironment>
    <!-- Potentially included here? -->
    <!-- <PlatformToolset>v120</PlatformToolset> -->    
  </PropertyGroup>
  <ItemGroup>
    <BuildMacro Include="LocalDebuggerEnvironmentCommand">
      <Value>$(LocalDebuggerEnvironment)</Value>
      <EnvironmentVariable>true</EnvironmentVariable>
    </BuildMacro>
  </ItemGroup>  
  <!-- Default compiler settings -->
  <ItemDefinitionGroup>
    <ClCompile>
      <AssemblerListingLocation>./$(Configuration)/$(Platform)</AssemblerListingLocation>
      <BasicRuntimeChecks Condition="'$(Configuration)'=='Debug'">EnableFastChecks</BasicRuntimeChecks>
      <CompileAs>CompileAsCpp</CompileAs>
      <DebugInformationFormat Condition="'$(Configuration)'=='Debug'">ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>Sync</ExceptionHandling>
      <InlineFunctionExpansion>$(InlineFuncExpansionSetting)</InlineFunctionExpansion>
      <Optimization>$(OptimizationSetting)</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary Condition="'$(Configuration)'=='Debug'">MultiThreadedDebugDLL</RuntimeLibrary>
      <RuntimeLibrary Condition="'$(Configuration)'=='Release'">MultiThreadedDLL</RuntimeLibrary>
      <RuntimeTypeInfo>true</RuntimeTypeInfo>
      <WarningLevel>Level3</WarningLevel>
      <FunctionLevelLinking Condition="'$(Configuration)'=='Debug'">false</FunctionLevelLinking>
      <FunctionLevelLinking Condition="'$(Configuration)'=='Release'">true</FunctionLevelLinking>
      <IntrinsicFunctions Condition="'$(Configuration)'=='Debug'">false</IntrinsicFunctions>
      <IntrinsicFunctions Condition="'$(Configuration)'=='Release'">true</IntrinsicFunctions>
      <PreprocessorDefinitions Condition="'$(Configuration)'=='Debug'">_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)'=='Release'">NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <AdditionalOptions>"-D_SCL_SECURE_NO_WARNINGS" %(AdditionalOptions)</AdditionalOptions>
      <MultiProcessorCompilation>true</MultiProcessorCompilation>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions Condition="'$(Configuration)'=='Debug'">_DEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <PreprocessorDefinitions Condition="'$(Configuration)'=='Release'">NDEBUG;%(PreprocessorDefinitions)</PreprocessorDefinitions>
    </ResourceCompile>
    <!-- Default linker settings -->
    <Link>
      <AdditionalOptions Condition="'$(Configuration)'=='Debug'"> /machine:$(MachineArch) /debug %(AdditionalOptions)</AdditionalOptions>
      <AdditionalOptions Condition="'$(Configuration)'=='Release'"> /machine:$(MachineArch) %(AdditionalOptions)</AdditionalOptions>
<!--       <AdditionalDependencies>kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies> -->
      <AdditionalDependencies>kernel32.lib</AdditionalDependencies>
      <GenerateDebugInformation Condition="'$(Configuration)'=='Debug'">true</GenerateDebugInformation>
      <GenerateDebugInformation Condition="'$(Configuration)'=='Release'">false</GenerateDebugInformation>
      <OptimizeReferences Condition="'$(Configuration)'=='Debug'">false</OptimizeReferences>
      <OptimizeReferences Condition="'$(Configuration)'=='Release'">true</OptimizeReferences>
      <SubSystem>Console</SubSystem>
    </Link>
  </ItemDefinitionGroup>
  <Target Name="PrintLocalLibraryPaths" DependsOnTargets="SourceBuildOutputPaths">
    <Message Text="LocalLibraryPaths=$(LocalLibraryPaths)" />
  </Target>
 </Project>